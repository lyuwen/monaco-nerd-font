# This is a basic workflow to help you get started with Actions

name: build fonts

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    tags: ["v*"]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Create direcntory
        run: mkdir -p ${{ github.workspace }}/patched/Monaco

      - uses: addnab/docker-run-action@v3
        with:
          image: nerdfonts/patcher:latest
          options: |
            -v ${{ github.workspace }}/unpatched/Monaco:/in -v ${{ github.workspace }}/patched/Monaco:/out 
          run: |
            fontforge -script /nerd/font-patcher -out /out -s --powerline --powerlineextra --material --fontawesome --weather --fontlogos  --complete --progressbars /in/Monaco.ttf

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: monaco # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ github.workspace }}/patched/Monaco
          # The desired behavior if no files are found using the provided path.
          
  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: monaco # optional
          # Destination path
          path: monaco # optional
      - name: Zip Release
        uses: TheDoctor0/zip-release@0.6.2
        with:
          # Filename for archive
          filename: monaco.zip # default is release.zip
          # directory to zip
          path: monaco
          # Tool to use for archiving
          type: 'zip' # optional, default is zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./monaco.zip
          asset_name: monaco.zip
          asset_content_type: application/zip
